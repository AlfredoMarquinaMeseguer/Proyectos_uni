// Variables goblales
arrayLectura: array[110] de entero
arrayEscritura: array[11] de entero

// También se puede calcular el inicio y final dentro del proceso, 
// pero para ello tendríamos que asumir que la distancia entre inicio y final
// es de 11, de esta manera funciona para cualquier N donde el primer elemento 
// es un número y la distancia enter inicio y final es impar. 
// Si fuera par funcionaría pero la última operación se la compería 
proccess type proceso (id:entero, inicio:entero, final: entero, semaforo:semaphore)
begin 
	total: entero
	esNum: booleano // Si es false el elemento actual es una op si es true es un numero
	operación: entero
	temp: entero
end;
begin
	// Inicialización variables
	esNum = false;
	operación = 0;
	// Guardamos el valor del primer elemento pues se añade
	// al total de forma diferente al resto.
	total = arrayLectura[inicio];
	// Recorremos las sección del array dada,
	// salvo el primer que
	for i = incio+1 .. final then
		temp = arrayLectura[i] // guardamos en local por buenas prácticas
		if esNum then
			// Si es un número tenemos que añadirlo al total.
			// Recordemos que la variable operación contiene
			// el identificador de la operación dada por la
			// posición anterior an num en el arrayLectura.
			total = calcular(total, temp, operacion);
		else
			// Guardamos la operación para poder llamarla con calcular
			operación = temp;
		finif

		// Como las operaciones y los número se alternan nuestra
		// variable de identificación también. También se puede
		// identificar si la posición actual es de un num con la
		// expresión booleana: i-inicio%2 == 1
		esNum = !esNum; // Alternar variable booleana
	finfor
	// Escritura en arrayEscritura
	arrayEscritura[id] = total;
	// La sección crítica solo requiere el uso de la salida
	wait(semaforo);	
	writeln(id,total); // Imprimir el mensaje
	signal(semaforo);
end;


/* 	Función que realiza una operación sobre los números num1 y num2
	según el valor de op
	Si el valor de op es:
		1 Suma
		2 resta
		3 Multiplicación
		otro error
*/
entero function calcular(num1: entero, num2: entero, op: entero)
begin	
	total:entero;
end;
begin
	switch temp then
		case 1:
			total = num1 + num2;		
		case 2:
			total = num1 - num2;
		case 3:
			total = num1 * num2;
		default:
			// Lanzar error
	finswitch
	return total
end;

/* 	Caculamos la suma de todos los valores guardados en
	el array de escritura.
*/

entero function calculoArrayEscritura():
begin
	total:entero
end
begin
	total =arrayEscritura[0]
	for i = 1 .. len(arrayEscritura)-1:
		total += arrayEscritura[i];
	return total;
end;

main()
begin
	procesos: array[1..11] de procesos;	
	solución: entero;
	semaforo: semaphore;
end
begin

	writeln("Comienzo de ejecución");

	// Definimos procesos
	for i = 0 .. len(arrayEscritura)-1 do
		procesos[i] = proceso(i, i*11, (i+1)*11-1, semaforo)
	
	// lanzar procesos
	cobegin 
	for i = 0 .. len(arrayEscritura)-1 do
		procesos[i].launch();
	coend;
	writeln ("Calculando resultado final");
	solución = calculoArrayEscritura();
	writeln("El total es:",solución);
end;
